@using CRUDCore.Helpers
@model PaginatedList<CRUDCore.Models.Tasks>

@{
    ViewData["Title"] = "Index - Tasks";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

<p>
    <button class="btn btn-primary" onclick="window.location.href='/Tasks/Manager/0'">Manager</button>
</p>
<form asp-action="Index" asp-controller="Tasks" method="get" class="form-horizontal form-inline">
    <input type="text" class="form-control" name="searchString" value="@ViewBag.currentFilter" placeholder="Search by title" />
    <button type="submit" class="btn btn-default">Search</button>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Items.First().Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items.First().IdCategoryTask)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items.First().Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items.First().FromDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items.First().DeadlineDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items.First().UnitPer)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Items.First().IsActived)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryTask.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>

                <td>
                    @{
                        var fromDate = item.FromDate.ToString("d");
                    }
                    @Html.DisplayFor(modelItem => fromDate)
                </td>
                <td>
                    @{
                        var deadlineDate = item.DeadlineDate.ToString("d");
                    }
                    @Html.DisplayFor(modelItem => deadlineDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UnitPer)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsActived)
                </td>
                <td>
                    <a asp-action="Manager" asp-route-id="@item.ID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                    <a href="#" data-id="@item.ID" data-title="@item.Title" id="btnTaskDelete">Delete</a>
                </td>
            </tr>
                        }
    </tbody>
</table>
@if (Model.TotalPages > 1)
{
    // Create numeric links
    var startpage = Math.Max(1, Model.Page - Model.MaxPage / 2);
    var endpage = Math.Min(Model.TotalPages, Model.Page + Model.MaxPage / 2);

    <nav class="text-center">
        <ul class="pagination">
            @if (Model.Page > 1)
            {
                <li>
                    <a href="?page=1" data-toggle="tooltip" title="Trang đầu" aria-label="First">
                        <i class="fa fa-angle-double-left"></i> First
                    </a>
                </li>
                <li>
                    <a href="?page=@(Model.Page - 1)" data-toggle="tooltip" title="Trang sau" aria-label="Previous">
                        <i class="fa fa-angle-left"></i> Previous
                    </a>
                </li>
            }

            @for (int i = startpage; i <= endpage; i++)
            {
                if (Model.Page == i)
                {
                    <li class="active"><a href="?page=@i" data-toggle="tooltip" title="Trang @i">@i</a></li>
                }
                else
                {
                    <li><a href="?page=@i" data-toggle="tooltip" title="Trang @i">@i</a></li>
                }
            }
            @if (Model.Page < Model.TotalPages)
            {
                <li>
                    <a href="?page=@(Model.Page + 1)" data-toggle="tooltip" title="Trang tiếp theo" aria-label="Next">
                        <i class="fa fa-angle-right"></i> Next
                    </a>
                </li>
                <li>
                    <a href="?page=@Model.TotalPages" data-toggle="tooltip" title="Trang cuối" aria-label="Last">
                        <i class="fa fa-angle-double-right"></i> Last
                    </a>
                </li>
            }
        </ul>
    </nav>
}